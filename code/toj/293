#include<bits/stdc++.h>
#define MAXN 100005
using namespace std;
int node[MAXN];bool vis[MAXN];vector<int>v[MAXN];
void dfs(int n){
	vis[n] = 1;
	for(int i=0;i<v[n].size();i++){
		int tmp = v[n][i];
		if(!vis[tmp]){dfs(tmp);node[n]+=node[tmp];}//printf("node[%d] += node[%d] => node[%d] = %d\n",n,tmp,n,node[n]);
	}
	node[n]++;
}
void reset(){
	for(int i=0;i<MAXN;i++)v[i].clear();memset(vis,0,sizeof(vis));memset(node,0,sizeof(node));
}
int main(){
	cin.tie(0);ios_base::sync_with_stdio(false);
	int t;cin>>t;
	while(t--){
		int shit[MAXN]={0};
		int n;cin>>n;
		reset();
		for(int i=1;i<n;i++){
			int a,b;cin>>a>>b;
			v[a].push_back(b);
			v[b].push_back(a);
		}
		dfs(0);
		for(int i=0;i<n;i++){
			shit[i] = n - node[i];
			//printf("shit[%d] = %d\n",i,shit[i]);
			for(int j=0;j<v[i].size();j++){
				//printf("shit[%d] = %d , node[%d] = %d\n",i,shit[i],v[i][j],node[v[i][j]]);
				if(node[v[i][j]]>node[i])continue;
				shit[i] = max(shit[i],node[v[i][j]]);
			}
		}
		int ans = -1,min=1e9;;
		for(int i=0;i<n;i++){
			//printf("shit[%d] = %d,min:%d\n",i,shit[i],min);
			if(min>shit[i]){ans = i;min = shit[i];}
		}
		cout<<ans<<'\n';
	}	
}
